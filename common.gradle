/*
 * Copyright (C) 2016 Baidu, Inc. All Rights Reserved.
 */
import java.util.regex.Pattern

project.ext {

    javaVersion = 7
    javaMaxHeapSize = '2G'
    compileSdkVersion = 23
    buildToolsVersion = '25.0.1'

    minSdkVer = 17
    targetSdkVer = 21

    enableBuildNative = true
    enableAspectj = false
    installAfterBuild = false

    // 开启instantRun
    instantRun = false
    // 自定义 multiDex
    customMultiDex = true

    // resguard
    enableResguard = true

    sourceCompatibility = this.&getJavaVersion()
    targetCompatibility = this.&getJavaVersion()
    getParamManifest = this.&getParamManifest
    parseLocalPropertes = this.&parseLocalPropertes
    analysisDexMethod = this.&analysisDexMethod
    generateMainDexClass = this.&generateMainDexClass
    analysisPath = this.&analysisPath
    androidJarPath = this.&getAndroidJarPath()
    releaseTime = this.&releaseTime

    buildToolsPath = "${project.rootDir}/build-tools/"
    multiDexRulesDir = "${projectDir}/multidex"
}

def getJavaVersion() {
    switch (project.ext.javaVersion) {
        case "6":
            return JavaVersion.VERSION_1_6
        case "7":
            return JavaVersion.VERSION_1_7
        case "8":
            return JavaVersion.VERSION_1_8
        case "9":
            return JavaVersion.VERSION_1_9
        default:
            return JavaVersion.VERSION_1_6
    }
}

def getParamManifest(param) {
    def manifestFile = file("${project.rootDir}/FileCamera/src/main/AndroidManifest.xml")
    def pattern = Pattern.compile("$param=\"(.*)\"");
    def matcher = pattern.matcher(manifestFile.getText())
    matcher.find()
    return matcher.group(1)
}

def getAndroidJarPath() {
    def androidJarPath = "${System.env.ANDROID_HOME}" + "/platforms/android-" + project.ext.compileSdkVersion + "/android.jar"
    if (!isFileExists(androidJarPath)) {
        def sdkDir = project.android.getSdkDirectory().getPath()
        if (sdkDir == null || !isFileExists(sdkDir + "/platforms/android-" + project.ext.compileSdkVersion + "/android.jar")) {
            throw new RuntimeException("ANDROID_HOME 环境变量或者 sdk.dir属性 不存在，请配置环境遍历在local.preperties中设置")
        }
        androidJarPath = sdkDir + "/platforms/android-" + project.ext.compileSdkVersion + "/android.jar"
    }
    return androidJarPath
}

def isFileExists(path) {
    def mFile = new File(path)
    return mFile.exists()
}

def parseLocalProperties(param) {
    def localProperties = new File(project.rootDir, "local.properties")
    if (localProperties.exists()) {
        Properties properties = new Properties()
        localProperties.withInputStream { instr ->
            properties.load(instr)
        }
        return properties.getProperty("$param")
    }
    return null
}

def analysisPath(param) {
    param = "${param}".toLowerCase()
    def path
    android.applicationVariants.all { variant ->
        def variantName = variant.name.toLowerCase()
        if (param.contains(variantName)) {
            path = variant.dirName
        }
    }
    return path
}

def releaseTime() {
    return new Date().format("yyyy-MM-dd-HH-mm-ss");
}
